@import '~sass/colors';
@import '~sass/variables';

$overlay-bg-color-not-active: rgba($white, 0);
$overlay-bg-color-active: rgba(darken($white, 15%), 0.2);

.app-loading {
  pointer-events: none;
  position: fixed;
  width: 100%;
  height: 100%;
  background-color: $overlay-bg-color-not-active;
  opacity: 0;
  transition: background-color $transition-out-duration,
    opacity $transition-out-duration;
  z-index: 999999; // propositalmente um numero acima de qualquer outro possivel z-index do app
}

.app-loading--active {
  pointer-events: all;
  background-color: $overlay-bg-color-active;
  opacity: 1;
  transition: background-color $transition-in-duration,
    opacity $transition-out-duration;
}

.app-loading__spinner {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: var(--color-theme);
  visibility: hidden;
  pointer-events: none;
  min-width: 30px;
  min-height: 30px;
}

.app-loading__spinner--active {
  visibility: visible;
}

// codigo abaixo utilizado de http://tobiasahlin.com/spinkit/
// para funcionar, deve ser acompanhado do html:
// <div class="spinner">
// <div class="bounce1"></div>
// <div class="bounce2"></div>
// <div class="bounce3"></div>
// </div>

.spinner {
  text-align: center;
}

.spinner > div {
  width: 25px;
  height: 25px;
  background-color: var(--color-theme);

  border-radius: 100%;
  display: inline-block;
  -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;
  animation: sk-bouncedelay 1.4s infinite ease-in-out both;
}

.bouncing-ball + .bouncing-ball {
  margin-left: 10px;
}

.spinner .bounce1 {
  -webkit-animation-delay: -0.32s;
  animation-delay: -0.32s;
}

.spinner .bounce2 {
  -webkit-animation-delay: -0.16s;
  animation-delay: -0.16s;
}

@-webkit-keyframes sk-bouncedelay {
  0%,
  80%,
  100% {
    -webkit-transform: scale(0);
  }
  40% {
    -webkit-transform: scale(1);
  }
}

@keyframes sk-bouncedelay {
  0%,
  80%,
  100% {
    -webkit-transform: scale(0);
    transform: scale(0);
  }
  40% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
}
